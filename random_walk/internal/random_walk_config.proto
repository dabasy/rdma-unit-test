/*
 * Copyright 2021 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

syntax = "proto2";

package rdma_unit_test.random_walk;

// This is the weight according to which the random walker will sample its
// actions
message ActionWeights {
  // Next id: 26
  optional float create_cq = 20 [default = 1];
  optional float destroy_cq = 21 [default = 1];
  optional float allocate_pd = 18 [default = 2];
  optional float deallocate_pd = 19 [default = 1];
  optional float register_mr = 1 [default = 2];
  optional float deregister_mr = 2 [default = 2];
  optional float allocate_type_1_mw = 3 [default = 5];
  optional float allocate_type_2_mw = 4 [default = 5];
  optional float deallocate_type_1_mw = 5 [default = 5];
  optional float deallocate_type_2_mw = 6 [default = 5];
  optional float bind_type_1_mw = 7 [default = 5];
  optional float bind_type_2_mw = 8 [default = 5];
  optional float create_rc_qp_pair = 15 [default = 2];
  optional float create_ud_qp = 22 [default = 1];
  optional float modify_qp_error = 16 [default = 0];
  optional float destroy_qp = 17 [default = 2];
  optional float create_ah = 23 [default = 5];
  optional float destroy_ah = 24 [default = 5];
  optional float send = 9 [default = 5];
  optional float send_with_inv = 25 [default = 0];
  optional float recv = 10 [default = 5];
  optional float read = 11 [default = 10];
  optional float write = 12 [default = 10];
  optional float fetch_add = 13 [default = 10];
  optional float comp_swap = 14 [default = 10];
}

// The caps on each type of ibverbs object per client.
message IbvObjectBound {
  // Next id: 13
  // max_rc_qp is a "soft" caps, i.e. when the total number of RC QPs on a
  // client exceeds this number, the client cannot initiate creating RC
  // QP communication channel (local remote RC QP pair), but can still create RC
  // QP when responding to other clients' request to establish RC QP pairs.
  optional uint32 max_rc_qp = 11 [default = 10];
  optional uint32 max_ud_qp = 12 [default = 8];
  optional uint32 max_cq = 10 [default = 5];
  optional uint32 max_pd = 9 [default = 5];
  optional uint32 max_mr = 8 [default = 10];
  optional uint32 max_type_1_mw = 7 [default = 30];
  optional uint32 max_type_2_mw = 6 [default = 30];
  optional uint32 min_cq = 5 [default = 2];
  optional uint32 min_pd = 4 [default = 2];
  optional uint32 min_mr = 1 [default = 2];
  optional uint32 min_type_1_mw = 2 [default = 1];
  optional uint32 min_type_2_mw = 3 [default = 1];
}
